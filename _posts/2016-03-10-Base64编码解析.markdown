---
layout:     post
title:      "Base64编码解析"
subtitle:   " \"Base64编码解析\""
date:       2016-03-09 12:00:00
author:     "X-ray"
header-img: "img/post-bg-2015.jpg"
tags:
    - 加密
---

## Base64原理简介

Base64是一种基于６４个可打印字符来表示二进制数据的表示方法，严格来讲并不是加密方法，仅仅是表示方法。由于每６bit为一个单元。三个字节有24个bit，对应于４个Base64单元




![Base64索引表](http://7xrrm5.com1.z0.glb.clouddn.com/blog_pic_article_2016-03-11-base64-1.png)


这么说可能稍微有点抽象，举个例子就明白了，比如 "Man" 这个单词由3个字节，也就是24bit组成,按我们前面说的如果用Base64编码的话，由４个Base64单元组成。具体可以看下面的图



![](http://7xrrm5.com1.z0.glb.clouddn.com/blog_pic_article_2016-03-11-base64-2.png)



所以"Man"这个单词用Base64编码的结果为"TWFu"



但是我们举得这个例子有点特殊，“Man”正好有3个字节，24bit正好转成４个Base64,　如果转码的数据不是３的倍数。

最后会多长１个或２个字节，那么可以使用下面的方法处理：先使用０字节值在末尾补足，使其能够被３整除，然后再进行base64的编码。在编码后的base64文本后加上一个或两个‘＝’号，代表补足的字节数。也就是说，当最后剩余一个八位字节（一个byte）时，最后一个6位的base64字节块有四位是0值，最后附加上两个等号；如果最后剩余两个八位字节（2个byte）时，最后一个6位的base字节块有两位是0值，最后附加一个等号。


## 编码



- 在终端命令行中编字符串



```

echo "hello" | base64

```


注：在Ubuntu上使用　echo "hello" | base64 时或出现多编码字符的情况，这个是因为UTF-8编码的原因



从指定的文件file中读取数据，编码为base64字符串输出。

```

base64 file

```

从标准输入中读取已经进行base64编码的内容，解码输出。

```
base64 -d
```


 





















